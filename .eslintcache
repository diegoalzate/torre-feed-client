[{"D:\\code\\web\\torre-client\\torre-feed\\src\\index.js":"1","D:\\code\\web\\torre-client\\torre-feed\\src\\App.js":"2","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\home.jsx":"3","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\login.jsx":"4","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\signup.jsx":"5","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\Home.jsx":"6","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\Login.jsx":"7","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\Signup.jsx":"8","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\Navbar.jsx":"9","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\Post.jsx":"10","D:\\code\\web\\torre-client\\torre-feed\\src\\util\\theme.js":"11","D:\\code\\web\\torre-client\\torre-feed\\src\\util\\AuthRoute.jsx":"12","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\store.js":"13","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\reducers\\userReducer.js":"14","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\reducers\\uiReducer.js":"15","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\reducers\\dataReducer.js":"16","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\actions\\userActions.js":"17","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\types.js":"18","D:\\code\\web\\torre-client\\torre-feed\\src\\util\\useIsMount.js":"19","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\actions\\dataActions.js":"20","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\JobsDashboard.jsx":"21","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\JobPreview.jsx":"22","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\CreatePost.jsx":"23","D:\\code\\web\\torre-client\\torre-feed\\src\\util\\MyButton.js":"24","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\Profile.jsx":"25","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\DeletePost.jsx":"26"},{"size":148,"mtime":1612013387884,"results":"27","hashOfConfig":"28"},{"size":2020,"mtime":1612203793509,"results":"29","hashOfConfig":"28"},{"size":632,"mtime":1612147771178,"results":"30","hashOfConfig":"28"},{"size":144,"mtime":1612147794569,"results":"31","hashOfConfig":"28"},{"size":147,"mtime":1612147803073,"results":"32","hashOfConfig":"28"},{"size":1190,"mtime":1612318098577,"results":"33","hashOfConfig":"28"},{"size":3562,"mtime":1612201972293,"results":"34","hashOfConfig":"28"},{"size":4492,"mtime":1612215598224,"results":"35","hashOfConfig":"28"},{"size":1010,"mtime":1612315115212,"results":"36","hashOfConfig":"28"},{"size":1796,"mtime":1612320706032,"results":"37","hashOfConfig":"28"},{"size":661,"mtime":1612183374384,"results":"38","hashOfConfig":"28"},{"size":512,"mtime":1612203723736,"results":"39","hashOfConfig":"28"},{"size":646,"mtime":1612208723973,"results":"40","hashOfConfig":"28"},{"size":691,"mtime":1612190318053,"results":"41","hashOfConfig":"28"},{"size":622,"mtime":1612191148628,"results":"42","hashOfConfig":"28"},{"size":996,"mtime":1612319627563,"results":"43","hashOfConfig":"28"},{"size":1735,"mtime":1612312899759,"results":"44","hashOfConfig":"28"},{"size":598,"mtime":1612318287887,"results":"45","hashOfConfig":"28"},{"size":237,"mtime":1612201628271,"results":"46","hashOfConfig":"28"},{"size":1922,"mtime":1612319399719,"results":"47","hashOfConfig":"28"},{"size":2797,"mtime":1612314681080,"results":"48","hashOfConfig":"28"},{"size":1415,"mtime":1612217155413,"results":"49","hashOfConfig":"28"},{"size":3502,"mtime":1612316546735,"results":"50","hashOfConfig":"28"},{"size":398,"mtime":1612218028257,"results":"51","hashOfConfig":"28"},{"size":2426,"mtime":1612314433164,"results":"52","hashOfConfig":"28"},{"size":1056,"mtime":1612320330578,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"jwr8sd",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},"D:\\code\\web\\torre-client\\torre-feed\\src\\index.js",[],["120","121"],"D:\\code\\web\\torre-client\\torre-feed\\src\\App.js",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\home.jsx",["122"],"D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\login.jsx",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\signup.jsx",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\Home.jsx",["123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Post from \"../components/Post\";\r\nimport axios from \"axios\";\r\nimport JobsDashboard from \"../components/JobsDashboard\";\r\nimport CreatePost from \"../components/CreatePost\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts } from \"../redux/actions/dataActions\";\r\nfunction Home(props) {\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    props.getPosts();\r\n    setPosts(props.data.posts);\r\n  }, []);\r\n  useEffect(() => {\r\n    setPosts(props.data.posts);\r\n  }, [props.data.posts]);\r\n\r\n  const createPost = (post) => {\r\n    return <Post post={post} key={post.postId} />;\r\n  };\r\n  let loading = posts ? posts.map(createPost) : <p>Loading...</p>;\r\n\r\n  return (\r\n    <Grid container spacing={10}>\r\n      <Grid item sm={4} xs={12}>\r\n        <JobsDashboard />\r\n      </Grid>\r\n      <Grid item sm={8} xs={12}>\r\n        <CreatePost />\r\n        {loading}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n});\r\nconst mapActionsToProps = {\r\n  getPosts,\r\n};\r\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\Login.jsx",["125","126","127","128","129"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport AppIcon from \"../images/icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\n//MUI STUFF\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField, Button, useRadioGroup } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport themeFile from \"../util/theme\";\r\nimport useIsMount from \"../util/useIsMount\";\r\n//Redux Stuff\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userActions\";\r\n\r\nconst styles = themeFile;\r\n\r\nfunction Login(props) {\r\n  const isMount = useIsMount();\r\n\r\n  const {\r\n    classes,\r\n    ui: { loading, errors },\r\n  } = props;\r\n  const [login, setLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n  });\r\n  useEffect(() => {\r\n    if (!isMount) {\r\n      if (props.ui.errors !== null) {\r\n        setLogin({ ...login, errors: props.ui.errors });\r\n      }\r\n    }\r\n  }, props.ui.errors);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const user = { ...login };\r\n    props.loginUser(user, props.history);\r\n  };\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n  return (\r\n    <Grid container className={classes.form}>\r\n      <Grid item xs>\r\n        <img src={AppIcon} alt=\"Torre Logo\" className={classes.image} />\r\n        <Typography variant=\"h1\" className={classes.pageTitle}>\r\n          Login\r\n        </Typography>\r\n        <Grid item xs>\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"filled\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              className={classes.textField}\r\n              error={login.errors.email ? true : false}\r\n              helperText={login.errors.email}\r\n              value={login.email}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              error={login.errors.email ? true : false}\r\n              helperText={login.errors.password}\r\n              className={classes.textField}\r\n              value={login.password}\r\n              onChange={handleChange}\r\n            />\r\n            {login.errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {login.errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              {loading && (\r\n                <CircularProgress size={30} className={classes.progress} />\r\n              )}\r\n              Login\r\n            </Button>\r\n          </form>\r\n          <small className={classes.small}>\r\n            Dont have an Account ? Sign Up <Link to=\"/signup\">here</Link>\r\n          </small>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  ui: state.ui,\r\n});\r\nconst mapActionsToProps = {\r\n  loginUser,\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Login));\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\pages\\Signup.jsx",["130","131"],"import React, { useState, useEffect } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport AppIcon from \"../images/icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport themeFile from \"../util/theme\";\r\n//MUI STUFF\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useIsMount from \"../util/useIsMount\";\r\n//Redux Stuff\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signupUser } from \"../redux/actions/userActions\";\r\n\r\nconst styles = themeFile;\r\nfunction SignUp(props) {\r\n  const isMount = useIsMount();\r\n\r\n  const [signup, setSignup] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    handle: \"\",\r\n    errors: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isMount) {\r\n      if (props.ui.errors !== null) {\r\n        setSignup({ ...signup, errors: props.ui.errors });\r\n      }\r\n    }\r\n  }, props.ui.errors);\r\n  const {\r\n    classes,\r\n    ui: { loading },\r\n  } = props;\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const user = { ...signup };\r\n    props.signupUser(user, props.history);\r\n  };\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setSignup({ ...signup, [name]: value });\r\n  };\r\n  return (\r\n    <Grid container className={classes.form}>\r\n      <Grid item xs>\r\n        <img src={AppIcon} alt=\"Torre Logo\" className={classes.image} />\r\n        <Typography variant=\"h1\" className={classes.pageTitle}>\r\n          Sign Up\r\n        </Typography>\r\n        <Grid item xs>\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"filled\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              className={classes.textField}\r\n              error={signup.errors.email ? true : false}\r\n              helperText={signup.errors.email}\r\n              value={signup.email}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              error={signup.errors.password ? true : false}\r\n              helperText={signup.errors.password}\r\n              className={classes.textField}\r\n              value={signup.password}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              label=\"Confirm Password\"\r\n              error={signup.errors.confirmPassword ? true : false}\r\n              helperText={signup.errors.confirmPassword}\r\n              className={classes.textField}\r\n              value={signup.confirmPassword}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              id=\"handle\"\r\n              name=\"handle\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              error={signup.errors.handle ? true : false}\r\n              helperText={signup.errors.handle}\r\n              className={classes.textField}\r\n              value={signup.handle}\r\n              onChange={handleChange}\r\n            />\r\n            {signup.errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {signup.errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              {loading && (\r\n                <CircularProgress size={30} className={classes.progress} />\r\n              )}\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n          <small className={classes.small}>\r\n            Already have an Account ?Log in <Link to=\"/login\">here</Link>\r\n          </small>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  ui: state.ui,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  signupUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(SignUp));\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\Navbar.jsx",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\components\\Post.jsx",["132","133","134"],"D:\\code\\web\\torre-client\\torre-feed\\src\\util\\theme.js",["135"],"export default {\r\n  form: {\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    maxWidth: \"50%\",\r\n  },\r\n  pageTitle: {\r\n    fontSize: \"3rem\",\r\n    color: \"#CDDC39\",\r\n    margin: \"10px\",\r\n  },\r\n  image: {\r\n    margin: \"20px auto 20px auto\",\r\n    maxHeight: \"30%\",\r\n  },\r\n  textField: {\r\n    display: \"flex\",\r\n    margin: \"30px\",\r\n    backgroundColor: \"#5E626B\",\r\n    color: \"#f0f0f0\",\r\n  },\r\n  customError: {\r\n    margin: \"10px\",\r\n    color: \"red\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n  button: {\r\n    postion: \"relative\",\r\n  },\r\n  progress: {\r\n    postion: \"absolute\",\r\n  },\r\n  small: {\r\n    margin: \"20px\",\r\n    display: \"block\",\r\n    color: \"#CDDC39\",\r\n  },\r\n};\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\util\\AuthRoute.jsx",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\store.js",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\reducers\\userReducer.js",["136","137","138","139"],"import {\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifiations: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true,\r\n      };\r\n\r\n    case SET_UNAUTHENTICATED:\r\n      return {\r\n        initialState,\r\n      };\r\n\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\reducers\\uiReducer.js",["140"],"import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from \"../types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: null,\r\n      };\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\reducers\\dataReducer.js",["141","142"],"import {\r\n  SET_JOBS,\r\n  LOADING_USER,\r\n  POST_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  jobs: [],\r\n  loading: false,\r\n  posts: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS: {\r\n      return {\r\n        ...state,\r\n        posts: [...action.payload],\r\n        loading: false,\r\n      };\r\n    }\r\n    case DELETE_POST:\r\n      const index = state.posts.findIndex(\r\n        (post) => post.postId === action.payload\r\n      );\r\n      state.posts.splice(index, 1);\r\n\r\n    case POST_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case SET_JOBS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        jobs: [...action.payload],\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\actions\\userActions.js",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\types.js",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\util\\useIsMount.js",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\redux\\actions\\dataActions.js",[],"D:\\code\\web\\torre-client\\torre-feed\\src\\components\\JobsDashboard.jsx",["143","144","145","146","147","148"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getJobs } from \"../redux/actions/dataActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport JobPreview from \"./JobPreview\";\r\nimport Profile from \"./Profile\";\r\n// MUI stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Icons\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: \"30px\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  title: {\r\n    color: \"#CDDC39\",\r\n  },\r\n  empty: {\r\n    padding: \"10%\",\r\n    backgroundColor: \"#27292D\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  button: {\r\n    margin: \"20px\",\r\n  },\r\n});\r\n\r\nfunction JobsDashboard(props) {\r\n  const classes = useStyles();\r\n  const [jobsState, setJobs] = useState([]);\r\n  const {\r\n    user: {\r\n      credentials: { handle, location },\r\n      authenticated,\r\n    },\r\n    data: { jobs, loading },\r\n  } = props;\r\n  useEffect(() => {\r\n    if (props.user.authenticated) {\r\n      setJobs(props.getJobs());\r\n    }\r\n  }, [authenticated]);\r\n  let allJobs = jobs.map((j) => {\r\n    return <JobPreview title={j.title} url={j.url} type={j.type} />;\r\n  });\r\n  let jobMarkup = !loading ? (\r\n    authenticated ? (\r\n      <div>\r\n        <h1 className={classes.title}>Profile</h1>\r\n\r\n        <Profile />\r\n        <h1 className={classes.title}>Best Jobs for you</h1>\r\n        {allJobs}\r\n      </div>\r\n    ) : (\r\n      <Paper class={classes.empty} r>\r\n        <Typography variant=\"body2\" color=\"secondary\" align=\"center\">\r\n          No profile found, please login again\r\n        </Typography>\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to=\"/login\"\r\n            className={classes.button}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            component={Link}\r\n            to=\"/signup\"\r\n            className={classes.button}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    )\r\n  ) : (\r\n    <CircularProgress size={30} />\r\n  );\r\n  return <div>{jobMarkup}</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n  user: state.user,\r\n});\r\nconst mapActionsToProps = {\r\n  getJobs,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(JobsDashboard);\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\JobPreview.jsx",["149","150","151"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: \"30px\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction JobPreview(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {props.type}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => {\r\n              window.location.href = props.url;\r\n            }}\r\n          >\r\n            {props.title}\r\n          </Link>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default JobPreview;\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\CreatePost.jsx",["152","153"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MyButton from \"../util/MyButton\";\r\n// MUI Stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// Redux stuff\r\nimport { connect } from \"react-redux\";\r\nimport { postPost, clearErrors } from \"../redux/actions/dataActions\";\r\n\r\nconst styles = (theme) => ({\r\n  submitButton: {\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    color: \"#CDDC39\",\r\n    marginTop: 10,\r\n  },\r\n  progressSpinner: {\r\n    position: \"absolute\",\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    left: \"91%\",\r\n    top: \"6%\",\r\n  },\r\n  postText: {\r\n    color: \"#CDDC39\",\r\n    marginRight: \"20px\",\r\n  },\r\n});\r\n\r\nfunction CreatePost(props) {\r\n  const [post, setPost] = useState({\r\n    open: false,\r\n    text: \"\",\r\n    errors: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.ui.errors) {\r\n      setPost({ ...post, errors: props.ui.errors });\r\n    }\r\n    if (!props.ui.errors) {\r\n      setPost({ ...post, text: \"\", open: false, errors: {} });\r\n    }\r\n  }, [props.data.jobs]);\r\n\r\n  const handleOpen = () => {\r\n    setPost({ ...post, open: true });\r\n  };\r\n  const handleClose = () => {\r\n    props.clearErrors();\r\n    setPost({ ...post, open: false, errors: {} });\r\n  };\r\n  const handleChange = (event) => {\r\n    setPost({ ...post, [event.target.name]: event.target.value });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setPost({ ...post, open: false });\r\n    props.postPost({ text: post.text });\r\n  };\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <MyButton onClick={handleOpen} tip=\"Post!\">\r\n        <div className={classes.postText}>\r\n          <AddIcon className={classes.submitButton} />\r\n        </div>\r\n      </MyButton>\r\n      <Dialog open={post.open} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n        <MyButton\r\n          tip=\"Close\"\r\n          onClick={handleClose}\r\n          tipClassName={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </MyButton>\r\n        <DialogTitle>Something worthwhile</DialogTitle>\r\n        <DialogContent>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              name=\"text\"\r\n              type=\"text\"\r\n              label=\"what have you been up to?\"\r\n              multiline\r\n              rows=\"3\"\r\n              placeholder=\"write here \"\r\n              error={post.errors.text ? true : false}\r\n              helperText={post.errors.text}\r\n              className={classes.textField}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submitButton}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.ui,\r\n  ui: state.ui,\r\n});\r\n\r\nexport default connect(mapStateToProps, { postPost, clearErrors })(\r\n  withStyles(styles)(CreatePost)\r\n);\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\util\\MyButton.js",["154"],"import React from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n  <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n    <IconButton onClick={onClick} className={btnClassName}>\r\n      {children}\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\Profile.jsx",["155","156","157"],"import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\n// MUI\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// Icons\r\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\r\n\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport MyButton from \"../util/MyButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../redux/actions/userActions\";\r\nconst styles = {\r\n  paper: {\r\n    padding: \"5%\",\r\n    backgroundColor: \"#F8F8FF\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  imageWrapper: {\r\n    textAlign: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  profileImage: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    objectFit: \"cover\",\r\n    maxWidth: \"100%\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  profileDetails: {\r\n    textAlign: \"center\",\r\n    \"& span, svg\": {\r\n      verticalAlign: \"middle\",\r\n    },\r\n    \"& a\": {\r\n      color: \"#00bcd4\",\r\n    },\r\n  },\r\n  hr: {\r\n    border: \"none\",\r\n    margin: \"0 0 10px 0\",\r\n  },\r\n};\r\n\r\nconst StaticProfile = (props) => {\r\n  const {\r\n    classes,\r\n    user: {\r\n      credentials: { handle, createdAt, photoUrl },\r\n    },\r\n  } = props;\r\n  const handlelogoutUser = () => {\r\n    props.logoutUser();\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div>\r\n        <div className={classes.imageWrapper}>\r\n          <img src={photoUrl} alt=\"profile\" className={classes.profileImage} />\r\n        </div>\r\n        <hr />\r\n        <div className={classes.profileDetails}>\r\n          <MuiLink component={Link} to={``} color=\"primary\" variant=\"h5\">\r\n            @{handle}\r\n          </MuiLink>\r\n          <hr />\r\n          <CalendarToday color=\"primary\" />{\" \"}\r\n          <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n          <hr />\r\n          <MyButton tip=\"Logout\" onClick={handlelogoutUser}>\r\n            <KeyboardReturn color=\"primary\" />\r\n          </MyButton>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  logoutUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(StaticProfile));\r\n","D:\\code\\web\\torre-client\\torre-feed\\src\\components\\DeletePost.jsx",["158","159","160","161","162","163","164"],"import React, { useState, Fragment } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MyButton from \"../util/MyButton\";\r\n\r\n// MUI Stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { deletePost } from \"../redux/actions/dataActions\";\r\n\r\nconst styles = {\r\n  deleteButton: {\r\n    position: \"relative\",\r\n    left: \"90%\",\r\n    top: \"10%\",\r\n    color: \"#ffffff\",\r\n  },\r\n};\r\n\r\nfunction DeletePost(props) {\r\n  const { classes } = props;\r\n\r\n  const deleteCurrent = () => {\r\n    props.deletePost(props.postId);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button onClick={deleteCurrent} color=\"secondary\">\r\n        Delete\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deletePost })(withStyles(styles)(DeletePost));\r\n",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":15},{"ruleId":"169","severity":1,"message":"173","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":14,"column":6,"nodeType":"176","endLine":14,"endColumn":8,"suggestions":"177"},{"ruleId":"169","severity":1,"message":"178","line":1,"column":38,"nodeType":"171","messageId":"172","endLine":1,"endColumn":44},{"ruleId":"169","severity":1,"message":"179","line":8,"column":29,"nodeType":"171","messageId":"172","endLine":8,"endColumn":42},{"ruleId":"169","severity":1,"message":"180","line":24,"column":20,"nodeType":"171","messageId":"172","endLine":24,"endColumn":26},{"ruleId":"174","severity":1,"message":"181","line":37,"column":6,"nodeType":"182","endLine":37,"endColumn":21},{"ruleId":"174","severity":1,"message":"183","line":37,"column":6,"nodeType":"182","endLine":37,"endColumn":21,"suggestions":"184"},{"ruleId":"174","severity":1,"message":"181","line":35,"column":6,"nodeType":"182","endLine":35,"endColumn":21},{"ruleId":"174","severity":1,"message":"185","line":35,"column":6,"nodeType":"182","endLine":35,"endColumn":21,"suggestions":"186"},{"ruleId":"169","severity":1,"message":"187","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":14},{"ruleId":"169","severity":1,"message":"188","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":22},{"ruleId":"169","severity":1,"message":"189","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":1,"column":1,"nodeType":"192","endLine":38,"endColumn":3},{"ruleId":"169","severity":1,"message":"193","line":3,"column":3,"nodeType":"171","messageId":"172","endLine":3,"endColumn":13},{"ruleId":"169","severity":1,"message":"194","line":4,"column":3,"nodeType":"171","messageId":"172","endLine":4,"endColumn":15},{"ruleId":"169","severity":1,"message":"195","line":5,"column":3,"nodeType":"171","messageId":"172","endLine":5,"endColumn":13},{"ruleId":"190","severity":1,"message":"196","line":17,"column":1,"nodeType":"192","endLine":40,"endColumn":2},{"ruleId":"190","severity":1,"message":"196","line":8,"column":1,"nodeType":"192","endLine":34,"endColumn":2},{"ruleId":"190","severity":1,"message":"196","line":15,"column":1,"nodeType":"192","endLine":52,"endColumn":2},{"ruleId":"197","severity":1,"message":"198","line":30,"column":5,"nodeType":"199","messageId":"200","endLine":35,"endColumn":9},{"ruleId":"169","severity":1,"message":"201","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":32,"column":3,"nodeType":"204","messageId":"205","endLine":32,"endColumn":8},{"ruleId":"169","severity":1,"message":"206","line":47,"column":10,"nodeType":"171","messageId":"172","endLine":47,"endColumn":19},{"ruleId":"169","severity":1,"message":"207","line":50,"column":22,"nodeType":"171","messageId":"172","endLine":50,"endColumn":28},{"ruleId":"169","severity":1,"message":"208","line":50,"column":30,"nodeType":"171","messageId":"172","endLine":50,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":59,"column":6,"nodeType":"176","endLine":59,"endColumn":21,"suggestions":"209"},{"ruleId":"169","severity":1,"message":"189","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":19},{"ruleId":"169","severity":1,"message":"210","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":14},{"ruleId":"169","severity":1,"message":"211","line":30,"column":9,"nodeType":"171","messageId":"172","endLine":30,"endColumn":13},{"ruleId":"169","severity":1,"message":"212","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":24},{"ruleId":"174","severity":1,"message":"213","line":52,"column":6,"nodeType":"176","endLine":52,"endColumn":23,"suggestions":"214"},{"ruleId":"190","severity":1,"message":"215","line":6,"column":1,"nodeType":"192","endLine":12,"endColumn":3},{"ruleId":"169","severity":1,"message":"216","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"217","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":17},{"ruleId":"169","severity":1,"message":"218","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":18},{"ruleId":"169","severity":1,"message":"219","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"220","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":16},{"ruleId":"169","severity":1,"message":"221","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":14},{"ruleId":"169","severity":1,"message":"222","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":19},{"ruleId":"169","severity":1,"message":"223","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":21},{"ruleId":"169","severity":1,"message":"224","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":21},{"ruleId":"169","severity":1,"message":"225","line":25,"column":11,"nodeType":"171","messageId":"172","endLine":25,"endColumn":18},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["228"],"'useRef' is defined but never used.","'useRadioGroup' is defined but never used.","'errors' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","MemberExpression","React Hook useEffect has missing dependencies: 'isMount', 'login', and 'props.ui.errors'. Either include them or remove the dependency array. If 'setLogin' needs the current value of 'props.ui.errors', you can also switch to useReducer instead of useState and read 'props.ui.errors' in the reducer.",["229"],"React Hook useEffect has missing dependencies: 'isMount', 'props.ui.errors', and 'signup'. Either include them or remove the dependency array. If 'setSignup' needs the current value of 'props.ui.errors', you can also switch to useReducer instead of useState and read 'props.ui.errors' in the reducer.",["230"],"'Link' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'SET_ERRORS' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","'LOADING_UI' is defined but never used.","Unexpected default export of anonymous function","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'MuiLink' is defined but never used.","no-dupe-keys","Duplicate key 'title'.","ObjectExpression","unexpected","'jobsState' is assigned a value but never used.","'handle' is assigned a value but never used.","'location' is assigned a value but never used.",["231"],"'Button' is defined but never used.","'bull' is assigned a value but never used.","'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'post' and 'props.ui.errors'. Either include them or remove the dependency array. If 'setPost' needs the current value of 'props.ui.errors', you can also switch to useReducer instead of useState and read 'props.ui.errors' in the reducer.",["232"],"Assign arrow function to a variable before exporting as module default","'Fragment' is defined but never used.","'PropTypes' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'MyButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogActions' is defined but never used.","'DeleteOutline' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [props]",{"range":"243","text":"244"},"Update the dependencies array to be: [isMount, login, props.ui.errors]",{"range":"245","text":"246"},"Update the dependencies array to be: [isMount, props.ui.errors, signup]",{"range":"247","text":"248"},"Update the dependencies array to be: [authenticated, props]",{"range":"249","text":"250"},"Update the dependencies array to be: [post, props.data.jobs, props.ui.errors]",{"range":"251","text":"252"},[522,524],"[props]",[1082,1097],"[isMount, login, props.ui.errors]",[1039,1054],"[isMount, props.ui.errors, signup]",[1421,1436],"[authenticated, props]",[1452,1469],"[post, props.data.jobs, props.ui.errors]"]